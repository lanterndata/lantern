ARG VERSION=16
ARG PGVECTOR_VERSION=0.5.0
ARG IMAGE_TAG=$VERSION-bookworm

FROM postgres:$IMAGE_TAG
ARG VERSION
ARG PGVECTOR_VERSION

WORKDIR /lantern

RUN apt update \
    # Fix the locales package version to prevent unexpected updates
    && apt-mark hold locales \
    && apt install -y --no-install-recommends \
       build-essential \
       cmake \
       postgresql-server-dev-$VERSION \
       gdb \
       wget \
       python3-pip \
       python3-dev \
       sudo \
       curl \
       git-all \
       tmux \
       clang-format \
    && pip install GitPython libtmux --break-system-packages && \
    wget -O pgvector.tar.gz https://github.com/pgvector/pgvector/archive/refs/tags/v${PGVECTOR_VERSION}.tar.gz && \
    tar xzf pgvector.tar.gz && \
    cd pgvector-${PGVECTOR_VERSION} && \
    make && make install


# Build lantern


# Install benchmarking tools in build folder

ENV POSTGRES_CONFIG_FILE /etc/postgresql/postgresql.conf
RUN sudo apt install -y vim
RUN cp /usr/share/postgresql/postgresql.conf.sample $POSTGRES_CONFIG_FILE && \
    echo "shared_preload_libraries = 'lantern'" >> $POSTGRES_CONFIG_FILE
RUN echo "postgres ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
# RUN mkdir build/lantern \
#     && git clone https://github.com/lanterndata/benchmark build/benchmark \
#     && cd build/benchmark \
#     && pip install -r core/requirements.txt --break-system-packages \
#     && pip install -r external/requirements.txt --break-system-packages
ENV DATABASE_URL=postgres://postgres:postgres@localhost:5432/postgres
ENV LANTERN_DATABASE_URL=postgres://postgres:postgres@localhost:5432/postgres

COPY . .
RUN rm -rf build \
    ; mkdir build \
    && cd build \
    && cmake -DUSEARCH_NO_MARCH_NATIVE=ON -DCMAKE_BUILD_TYPE=Debug .. \
    && make install
RUN chown postgres:postgres -R /lantern
# run docker as entrypoint with custom config as argument
# docker-entrypoint.sh is in /usr/local/bin/
ENTRYPOINT docker-entrypoint.sh -c config_file=$POSTGRES_CONFIG_FILE