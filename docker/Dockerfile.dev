ARG VERSION=15
ARG PGVECTOR_VERSION=0.5.1

# If you want to build the base image for different versions use Dockerfile.pg
# To use GDB inside container run docker like this:
# docker build . -t lantern-dev
# docker run --cap-add=SYS_PTRACE -p 5433:5432 -d --name lantern-dev lantern-dev
# Then exec to it docker exec -ti -u root lantern-dev bash
# gdb -p $pid_of_pg_backend

FROM varik77/postgres:$VERSION-debug
ARG PGVECTOR_VERSION

WORKDIR /lantern

USER root
ENV DEBIAN_FRONTEND=noninteractive
RUN apt update && apt install -y curl lcov libpq5
RUN apt update && apt install -y clang-15 gcc-12 g++-12

# allow non-root users to install in the container to make it easier to run update-tests
RUN chmod 777 /usr/local/pgsql/lib/ /usr/local/pgsql/share/extension/ /usr/local/pgsql/include/server/
RUN cd /root/postgresql-15.5/contrib && make install -j

RUN mkdir -p /var/lib/postgresql/data && chown postgres:postgres /var/lib/postgresql/data
USER postgres

RUN pip install GitPython libtmux

# Build & Install pgvector
RUN wget -O pgvector.tar.gz https://github.com/pgvector/pgvector/archive/refs/tags/v${PGVECTOR_VERSION}.tar.gz && \
    tar xzf pgvector.tar.gz && \
    cd pgvector-${PGVECTOR_VERSION} && \
    make -j && make install

COPY . .

# Build & Install lantern
RUN sudo rm -rf build \
    && mkdir build \
    && cd build \
    && cmake -DCMAKE_BUILD_TYPE=Debug -DBUILD_C_TESTS=ON .. \
    && make -j install

# Install benchmarking tools in build folder
RUN git clone https://github.com/lanterndata/benchmark build/benchmark \
    && cd build/benchmark \
    && pip install -r core/requirements.txt \
    && pip install -r external/requirements.txt

ENV DATABASE_URL=postgres://postgres@localhost:5432/postgres
ENV LANTERN_DATABASE_URL=postgres://postgres@localhost:5432/postgres

# Uncomment the following to change the data directory of the running postgres
# RUN /usr/local/pgsql/bin/initdb -D /var/lib/postgresql/data
# RUN echo "listen_addresses '*' " >> /var/lib/postgresql/data/postgresql.conf
RUN /usr/local/pgsql/bin/initdb -D /var/lib/postgresql/data
RUN echo "shared_preload_libraries = 'pg_stat_statements' " >> /var/lib/postgresql/data/postgresql.conf
# RUN echo "host    all             all             0.0.0.0/0               trust" >> /var/lib/postgresql/data/pg_hba.conf
# CMD ["/usr/local/pgsql/bin/postgres", "-D", "/var/lib/postgresql/data"]
CMD ["/usr/local/pgsql/bin/postgres", "-D", "/var/lib/postgresql/data"]
