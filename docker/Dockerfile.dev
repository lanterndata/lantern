ARG VERSION=15
ARG PGVECTOR_VERSION=0.6.1
  #fix pg_cron at the latest commit of the time
ARG PG_CRON_COMMIT_SHA=7e91e72b1bebc5869bb900d9253cc9e92518b33f

# If you want to build the base image for different versions use Dockerfile.pg
# To use GDB inside container run docker like this:
# docker build . -t lantern-dev
# docker run --cap-add=SYS_PTRACE -p 5433:5432 -d --name lantern-dev lantern-dev
# Then exec to it docker exec -ti -u root lantern-dev bash
# gdb -p $pid_of_pg_backend

FROM varik77/postgres:$VERSION-debug
ARG PGVECTOR_VERSION
ARG PG_CRON_COMMIT_SHA

WORKDIR /lantern

USER root
ENV DEBIAN_FRONTEND=noninteractive
RUN apt update && apt install -y curl lcov libpq5
RUN apt update && apt install -y clang-15 gcc-12 g++-12

# install ruby
RUN apt update && apt install -y ruby-full
RUN gem install bundler
# need to install pg here to specify libpq location
# it cannot be found by default since we installed pg from source
RUN gem install pg -- --with-pg-include=/usr/local/pgsql/include/ --with-pg-lib=/usr/local/pgsql/lib/

# hack to make sure postgres user has write access to externally mounted volumes
RUN mkdir /lantern_shared && chown postgres:postgres /lantern_shared

RUN cd /root/postgresql-15.5/contrib && make install

# allow non-root users to install in the container to make it easier to run update-tests
RUN chmod -R 777 /usr/local/pgsql/lib/ /usr/local/pgsql/share/extension/ /usr/local/pgsql/include/server/
RUN mkdir -p /var/lib/postgresql/data && chown postgres:postgres /var/lib/postgresql/data
USER postgres

RUN pip install GitPython libtmux

# Build & Install pgvector
RUN wget --quiet -O pgvector.tar.gz https://github.com/pgvector/pgvector/archive/refs/tags/v${PGVECTOR_VERSION}.tar.gz && \
    tar xzf pgvector.tar.gz && \
    (cd pgvector-${PGVECTOR_VERSION} && make -j && make install)

# build & Install pg_cron
RUN  git clone https://github.com/citusdata/pg_cron.git && \
    (cd pg_cron && git checkout ${PG_CRON_COMMIT_SHA} && make -j && make install)

COPY . .

# Build & Install lantern
RUN sudo rm -rf build \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make -j install

# Install benchmarking tools in build folder
RUN git clone https://github.com/lanterndata/benchmark build/benchmark \
    && cd build/benchmark \
    && pip install -r core/requirements.txt \
    && pip install -r external/requirements.txt

# Install perf
RUN sudo apt update && sudo apt install -y linux-tools-common linux-tools-generic
# in host, enable perf_event paranoid via
# echo -1 | sudo tee /proc/sys/kernel/perf_event_paranoid

ENV DATABASE_URL=postgres://postgres@localhost:5432/postgres
ENV LANTERN_DATABASE_URL=postgres://postgres@localhost:5432/postgres

# Uncomment the following to change the data directory of the running postgres
# RUN /usr/local/pgsql/bin/initdb -D /var/lib/postgresql/data
# RUN echo "listen_addresses '*' " >> /var/lib/postgresql/data/postgresql.conf
RUN /usr/local/pgsql/bin/initdb -D /var/lib/postgresql/data
RUN echo "shared_preload_libraries = 'pg_cron,pg_stat_statements' " >> /var/lib/postgresql/data/postgresql.conf && \
    echo "wal_level = 'logical' " >> /var/lib/postgresql/data/postgresql.conf && \
    echo "listen_addresses = '*' " >> /var/lib/postgresql/data/postgresql.conf && \
    echo "shared_buffers = '4GB' " >> /var/lib/postgresql/data/postgresql.conf

RUN echo "host    all             all             0.0.0.0/0               trust" >> /var/lib/postgresql/data/pg_hba.conf
# CMD ["/usr/local/pgsql/bin/postgres", "-D", "/var/lib/postgresql/data"]
CMD ["/usr/local/pgsql/bin/postgres", "-D", "/var/lib/postgresql/data"]
