# To use GDB inside container run docker like this:
# docker build . -t pg-debug
# docker run --cap-add=SYS_PTRACE -p 5433:5432 -d --name debug-pg pg-debug
# Then exec to it docker exec -ti -u root debug-bg bash
# gdb -p $pid_of_pg_backend

FROM ubuntu:22.04
ARG PG_VERSION=15

ENV DEBIAN_FRONTEND=noninteractive
RUN apt update && apt-mark hold locales && apt install --no-install-recommends -y wget git-all make build-essential libreadline8 libreadline-dev zlib1g zlib1g-dev cmake gdb tmux vim sudo pkg-config libicu-dev clang-format python3-pip python3-dev

# Build and install postgres
RUN cd /root && wget --quiet https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${VERSION}.tar.bz2 && \
    tar xf postgresql-${PG_VERSION}.tar.bz2 && \
    rm -rf postgresql-${PG_VERSION}.tar.bz2 

RUN cd /root/postgresql-${PG_VERSION} && ./configure --enable-debug --enable-cassert && \
    make && make install -j

ENV PATH="${PATH}:/usr/local/pgsql/bin"

# Add postgres user
RUN pass=$(perl -e 'print crypt("postgres", "postgres")' $password) && \
		useradd -m -p "$pass" "postgres" && \
		echo 'postgres ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# Run initdb
USER postgres

RUN mkdir /home/postgres/db && /usr/local/pgsql/bin/initdb -D /home/postgres/db && \
    echo "listen_addresses '*' " >> /home/postgres/db/postgresql.conf && \
    echo "host    all             all             0.0.0.0/0               trust" >> /home/postgres/db/pg_hba.conf

CMD ["/usr/local/pgsql/bin/postgres", "-D", "/home/postgres/db"]
