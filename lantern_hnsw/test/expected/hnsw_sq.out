------------------------------------------------------------------------------
-- Test HNSW scalar and binary quantization
------------------------------------------------------------------------------
-- Validate that index creation works with a small number of vectors
\ir utils/small_world_array.sql
CREATE TABLE small_world (
    id VARCHAR(3),
    b BOOLEAN,
    v REAL[3]
);
INSERT INTO small_world (id, b, v) VALUES
    ('000', TRUE,  '{0,0,0}'),
    ('001', TRUE,  '{0,0,1}'),
    ('010', FALSE, '{0,1,0}'),
    ('011', TRUE,  '{0,1,1}'),
    ('100', FALSE, '{1,0,0}'),
    ('101', FALSE, '{1,0,1}'),
    ('110', FALSE, '{1,1,0}'),
    ('111', TRUE,  '{1,1,1}');
\ir utils/sift1k_array.sql
CREATE TABLE IF NOT EXISTS sift_base1k (
    id SERIAL,
    v REAL[]
);
COPY sift_base1k (v) FROM '/tmp/lantern/vector_datasets/sift_base1k_arrays.csv' WITH csv;
\set VERBOSITY default
SET enable_seqscan = off;
-- test failures on wrong option values
\set ON_ERROR_STOP off
CREATE INDEX ON sift_base1k USING lantern_hnsw (v) WITH (dim=128, M=8, quant_bits=3);
ERROR:  invalid value for enum option "quant_bits": 3
DETAIL:  Unsupported quantization bits. Supported values are 1, 2, 4, 8, 16 and 32
CREATE INDEX ON sift_base1k USING lantern_hnsw (v) WITH (dim=128, M=8, quant_bits=0);
ERROR:  invalid value for enum option "quant_bits": 0
DETAIL:  Unsupported quantization bits. Supported values are 1, 2, 4, 8, 16 and 32
\set ON_ERROR_STOP on
CREATE INDEX ind32 ON sift_base1k USING lantern_hnsw (v) WITH (dim=128, M=8, quant_bits=32);
INFO:  done init usearch index
INFO:  inserted 1000 elements
INFO:  done saving 1000 vectors
CREATE INDEX ind16 ON sift_base1k USING lantern_hnsw (v) WITH (dim=128, M=8, quant_bits=16);
INFO:  done init usearch index
INFO:  inserted 1000 elements
INFO:  done saving 1000 vectors
SELECT * FROM ldb_get_indexes('sift_base1k');
 indexname |  size  |                                             indexdef                                              | indisvalid 
-----------+--------+---------------------------------------------------------------------------------------------------+------------
 ind16     | 400 kB | CREATE INDEX ind16 ON sift_base1k USING lantern_hnsw (v) WITH (dim='128', m='8', quant_bits='16') | t
 ind32     | 680 kB | CREATE INDEX ind32 ON sift_base1k USING lantern_hnsw (v) WITH (dim='128', m='8', quant_bits='32') | t

SELECT v as v42 from sift_base1k WHERE id = 42 \gset
BEGIN;
DROP INDEX ind16;
-- costs cause a regression in this query, so we disable it
EXPLAIN (COSTS FALSE) SELECT id, ROUND((v <-> :'v42')::numeric, 1) as dist FROM sift_base1k ORDER BY v <-> :'v42' LIMIT 10;
                                                                                                                                                                          QUERY PLAN                                                                                                                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit
   ->  Index Scan using ind32 on sift_base1k
         Order By: (v <-> '{1,0,0,0,0,0,21,35,1,0,0,0,0,77,51,42,66,2,0,0,0,86,140,71,52,1,0,0,0,0,23,70,2,0,0,0,0,64,73,50,11,0,0,0,0,140,97,18,140,64,0,0,0,99,51,65,78,11,0,0,0,0,41,76,0,0,0,0,0,124,82,2,48,1,0,0,0,118,31,5,140,21,0,0,0,4,12,78,12,0,0,0,0,0,58,117,1,0,0,0,2,25,7,2,46,2,0,0,1,12,4,8,140,9,0,0,0,1,8,16,3,0,0,0,0,0,21,34}'::real[])

                      SELECT id, ROUND((v <-> :'v42')::numeric, 1) as dist, l2sq_dist(v, :'v42') FROM sift_base1k ORDER BY v <-> :'v42' LIMIT 10;
 id  |  dist   | l2sq_dist 
-----+---------+-----------
  42 |     0.0 |         0
  36 | 10530.0 |     10530
  48 | 51038.0 |     51038
  39 | 56265.0 |     56265
 886 | 71637.0 |     71637
 402 | 77013.0 |     77013
 518 | 85024.0 |     85024
 340 | 87261.0 |     87261
 331 | 87796.0 |     87796
 682 | 94988.0 |     94988

ROLLBACK;
DROP INDEX ind32, ind16;
-- create a transformed column that can be used for i8 uniform [-1-1]=>[-100,100] quantization and
-- binary > 0 quantization
ALTER TABLE sift_base1k ADD COLUMN v_transformed real[];
UPDATE sift_base1k SET v_transformed =  (
  SELECT array_agg((element - 50)/ 100.0)
  FROM unnest(v) AS t(element)
);
SELECT v_transformed as v_transformed  from sift_base1k WHERE id = 42 \gset
CREATE INDEX ind8 ON sift_base1k USING lantern_hnsw (v_transformed) WITH (dim=128, M=8, quant_bits=8);
INFO:  done init usearch index
INFO:  inserted 1000 elements
INFO:  done saving 1000 vectors
SELECT * FROM ldb_get_indexes('sift_base1k');
 indexname |  size  |                                                  indexdef                                                   | indisvalid 
-----------+--------+-------------------------------------------------------------------------------------------------------------+------------
 ind8      | 272 kB | CREATE INDEX ind8 ON sift_base1k USING lantern_hnsw (v_transformed) WITH (dim='128', m='8', quant_bits='8') | t

EXPLAIN SELECT id, ROUND((v_transformed <-> :'v_transformed')::numeric, 1) as dist FROM sift_base1k ORDER BY v_transformed <-> :'v_transformed' LIMIT 10;


 Limit  (cost=0.00..9.26 rows=10 width=40)
   ->  Index Scan using ind8 on sift_base1k  (cost=0.00..926.29 rows=1000 width=40)
         Order By: (v_transformed <-> '{-0.49,-0.5,-0.5,-0.5,-0.5,-0.5,-0.29,-0.15,-0.49,-0.5,-0.5,-0.5,-0.5,0.27,0.01,-0.08,0.16,-0.48,-0.5,-0.5,-0.5,0.36,0.9,0.21,0.02,-0.49,-0.5,-0.5,-0.5,-0.5,-0.27,0.2,-0.48,-0.5,-0.5,-0.5,-0.5,0.14,0.23,0,-0.39,-0.5,-0.5,-0.5,-0.5,0.9,0.47,-0.32,0.9,0.14,-0.5,-0.5,-0.5,0.49,0.01,0.15,0.28,-0.39,-0.5,-0.5,-0.5,-0.5,-0.09,0.26,-0.5,-0.5,-0.5,-0.5,-0.5,0.74,0.32,-0.48,-0.02,-0.49,-0.5,-0.5,-0.5,0.68,-0.19,-0.45,0.9,-0.29,-0.5,-0.5,-0.5,-0.46,-0.38,0.28,-0.38,-0.5,-0.5,-0.5,-0.5,-0.5,0.08,0.67,-0.49,-0.5,-0.5,-0.5,-0.48,-0.25,-0.43,-0.48,-0.04,-0.48,-0.5,-0.5,-0.49,-0.38,-0.46,-0.42,0.9,-0.41,-0.5,-0.5,-0.5,-0.49,-0.42,-0.34,-0.47,-0.5,-0.5,-0.5,-0.5,-0.5,-0.29,-0.16}'::real[])

        SELECT id, ROUND((v_transformed <-> :'v_transformed')::numeric, 1) as dist FROM sift_base1k ORDER BY v_transformed <-> :'v_transformed' LIMIT 10;
 id  | dist 
-----+------
  42 |  0.0
  36 |  1.1
  48 |  5.1
  39 |  5.6
 886 |  7.2
 402 |  7.7
 518 |  8.5
 340 |  8.7
 331 |  8.8
 682 |  9.5

DROP INDEX ind8;
SELECT * FROM ldb_get_indexes('sift_base1k');
 indexname | size | indexdef | indisvalid 
-----------+------+----------+------------

SELECT v_transformed as v_transformed42 from sift_base1k WHERE id = 42 \gset
CREATE INDEX ind1 ON sift_base1k USING lantern_hnsw (v_transformed) WITH (dim=128, M=8, quant_bits=1);
INFO:  done init usearch index
INFO:  inserted 1000 elements
INFO:  done saving 1000 vectors
SELECT * FROM ldb_get_indexes('sift_base1k');
 indexname |  size  |                                                  indexdef                                                   | indisvalid 
-----------+--------+-------------------------------------------------------------------------------------------------------------+------------
 ind1      | 160 kB | CREATE INDEX ind1 ON sift_base1k USING lantern_hnsw (v_transformed) WITH (dim='128', m='8', quant_bits='1') | t

EXPLAIN SELECT id, ROUND((v_transformed <-> :'v_transformed42')::numeric, 1) as dist FROM sift_base1k ORDER BY v_transformed <-> :'v_transformed42' LIMIT 4;


 Limit  (cost=0.00..3.64 rows=4 width=40)
   ->  Index Scan using ind1 on sift_base1k  (cost=0.00..910.50 rows=1000 width=40)
         Order By: (v_transformed <-> '{-0.49,-0.5,-0.5,-0.5,-0.5,-0.5,-0.29,-0.15,-0.49,-0.5,-0.5,-0.5,-0.5,0.27,0.01,-0.08,0.16,-0.48,-0.5,-0.5,-0.5,0.36,0.9,0.21,0.02,-0.49,-0.5,-0.5,-0.5,-0.5,-0.27,0.2,-0.48,-0.5,-0.5,-0.5,-0.5,0.14,0.23,0,-0.39,-0.5,-0.5,-0.5,-0.5,0.9,0.47,-0.32,0.9,0.14,-0.5,-0.5,-0.5,0.49,0.01,0.15,0.28,-0.39,-0.5,-0.5,-0.5,-0.5,-0.09,0.26,-0.5,-0.5,-0.5,-0.5,-0.5,0.74,0.32,-0.48,-0.02,-0.49,-0.5,-0.5,-0.5,0.68,-0.19,-0.45,0.9,-0.29,-0.5,-0.5,-0.5,-0.46,-0.38,0.28,-0.38,-0.5,-0.5,-0.5,-0.5,-0.5,0.08,0.67,-0.49,-0.5,-0.5,-0.5,-0.48,-0.25,-0.43,-0.48,-0.04,-0.48,-0.5,-0.5,-0.49,-0.38,-0.46,-0.42,0.9,-0.41,-0.5,-0.5,-0.5,-0.49,-0.42,-0.34,-0.47,-0.5,-0.5,-0.5,-0.5,-0.5,-0.29,-0.16}'::real[])

        SELECT id, ROUND((v_transformed <-> :'v_transformed42')::numeric, 1) as dist FROM sift_base1k ORDER BY v_transformed <-> :'v_transformed42' LIMIT 4;
 id  | dist 
-----+------
  42 |  0.0
  36 |  1.1
 886 |  7.2
 340 |  8.7

-- test on 2000+ dim vectors
