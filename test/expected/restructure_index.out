-- create a table like in small world
DROP TABLE IF EXISTS small_world;
NOTICE:  table "small_world" does not exist, skipping
CREATE TABLE small_world (
    id VARCHAR(3),
    b BOOLEAN,
    v REAL[3]
);
CREATE INDEX ON small_world USING hnsw (v) WITH (dim=3, M=5, ef=20, ef_construction=20);
INFO:  done init usearch index
INFO:  build hnsw index - using inserts: 0.028 ms
INFO:  inserted 0 elements
INFO:  done saving 0 vectors
SET enable_seqscan = off;
INSERT INTO small_world (id, b, v) VALUES
    ('000', TRUE,  '{0,0,0}'),
    ('001', TRUE,  '{0,0,1}'),
    ('010', FALSE, '{0,1,0}'),
    ('011', TRUE,  '{0,1,1}'),
    ('100', FALSE, '{1,0,0}'),
    ('101', FALSE, '{1,0,1}'),
    ('110', FALSE, '{1,1,0}'),
    ('111', TRUE,  '{1,1,1}');
SELECT * FROM small_world ORDER BY v <-> '{0,0,0}' LIMIT 3;
 id  | b |    v    
-----+---+---------
 000 | t | {0,0,0}
 100 | f | {1,0,0}
 010 | f | {0,1,0}
(3 rows)

EXPLAIN (COSTS FALSE) SELECT * FROM small_world ORDER BY v <-> '{0,0,0}' LIMIT 3;
                       QUERY PLAN                        
---------------------------------------------------------
 Limit
   ->  Index Scan using small_world_v_idx on small_world
         Order By: (v <-> '{0,0,0}'::real[])
(3 rows)

SELECT * FROM small_world ORDER BY v <-> '{0,0,0}' LIMIT 10;
 id  | b |    v    
-----+---+---------
 000 | t | {0,0,0}
 100 | f | {1,0,0}
 010 | f | {0,1,0}
 001 | t | {0,0,1}
 110 | f | {1,1,0}
 101 | f | {1,0,1}
 011 | t | {0,1,1}
 111 | t | {1,1,1}
(8 rows)

