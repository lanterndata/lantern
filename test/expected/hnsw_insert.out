---------------------------------------------------------------------
-- Test HNSW index inserts on empty table
---------------------------------------------------------------------
CREATE TABLE small_world (
    id SERIAL PRIMARY KEY,
    v REAL[2]
);
CREATE INDEX ON small_world USING hnsw (v) WITH (dims=2);
INFO:  done init usearch index
INFO:  inserted 0 elements
INFO:  done saving 0 vectors
-- Insert rows with valid vector data
INSERT INTO small_world (v) VALUES ('{0,0}'), ('{0,1}'), ('{1,0}'), ('{1,1}');
INSERT INTO small_world (v) VALUES (NULL);
-- Attempt to insert a row with an incorrect vector length
\set ON_ERROR_STOP off
INSERT INTO small_world (v) VALUES ('{1,1,1}');
ERROR:  Wrong number of dimensions: 3 instead of 2 expected
\set ON_ERROR_STOP on
DROP TABLE small_world;
---------------------------------------------------------------------
-- Test HNSW index inserts on non-empty table
---------------------------------------------------------------------
\ir utils/small_world_array.sql
CREATE TABLE small_world (
    id SERIAL,
    b BOOLEAN,
    v REAL[2]
);
INSERT INTO small_world (b, v) VALUES
    (TRUE, '{1,1}'),
    (TRUE, '{3,3}'),
    (TRUE, '{2,2}'),
    (TRUE, '{4,4}'),
    (TRUE, '{1,9}');
CREATE INDEX ON small_world USING hnsw (v) WITH (dims=2);
INFO:  done init usearch index
INFO:  inserted 5 elements
INFO:  done saving 5 vectors
SET enable_seqscan = off;
-- Inserting vectors of the same dimension and nulls should work
INSERT INTO small_world (v) VALUES ('{10,10}');
INSERT INTO small_world (v) VALUES (NULL);
-- Inserting vectors of different dimension should fail
\set ON_ERROR_STOP off
INSERT INTO small_world (v) VALUES ('{4,4,4}');
ERROR:  Wrong number of dimensions: 3 instead of 2 expected
\set ON_ERROR_STOP on
-- Verify that the index works with the inserted vectors
SELECT
    id,
    ROUND(l2sq_dist(v, ARRAY[0,0])::numeric, 2)
FROM
    small_world
ORDER BY
    v <-> ARRAY[0,0];
INFO:  began scanning with 0 keys and 1 orderbys
INFO:  starting scan with dimensions=2 M=16 efConstruction=128 ef=64
INFO:  usearch index initialized
 id | round  
----+--------
  1 |   2.00
  3 |   8.00
  2 |  18.00
  4 |  32.00
  5 |  82.00
  6 | 200.00
(6 rows)

-- Ensure the index size remains consistent after inserts
SELECT * from ldb_get_indexes('small_world');
     indexname     | size  |                                      indexdef                                       | total_index_size 
-------------------+-------+-------------------------------------------------------------------------------------+------------------
 small_world_v_idx | 24 kB | CREATE INDEX small_world_v_idx ON public.small_world USING hnsw (v) WITH (dims='2') | 24 kB
(1 row)

-- Ensure the query plan remains consistent after inserts
EXPLAIN (COSTS FALSE)
SELECT
    id,
    ROUND(l2sq_dist(v, ARRAY[0,0])::numeric, 2)
FROM
    small_world
ORDER BY
    v <-> ARRAY[0,0]
LIMIT 10;
                       QUERY PLAN                        
---------------------------------------------------------
 Limit
   ->  Index Scan using small_world_v_idx on small_world
         Order By: (v <-> '{0,0}'::real[])
(3 rows)

-- Test the index with a larger number of vectors
CREATE TABLE sift_base10k (
    id SERIAL PRIMARY KEY,
    v REAL[128]
);
CREATE INDEX hnsw_idx ON sift_base10k USING hnsw (v dist_l2sq_ops) WITH (M=2, ef_construction=10, ef=4, dims=128);
INFO:  done init usearch index
INFO:  inserted 0 elements
INFO:  done saving 0 vectors
\COPY sift_base10k (v) FROM '/tmp/lanterndb/vector_datasets/siftsmall_base_arrays.csv' WITH CSV;
WARNING:  terminating connection because of crash of another server process
server closed the connection unexpectedly
	This probably means the server terminated abnormally
	before or while processing the request.
invalid socket
connection to server was lost
